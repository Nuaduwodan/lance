# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow will build, test, sign and package a WPF or Windows Forms desktop application
# built on .NET Core.
# To learn how to migrate your existing application to .NET Core,
# refer to https://docs.microsoft.com/en-us/dotnet/desktop-wpf/migration/convert-project-from-net-framework
#
# To configure this workflow:
#
# 1. Configure environment variables
# GitHub sets default environment variables for every workflow run.
# Replace the variables relative to your project in the "env" section below.
#
# 2. Signing
# Generate a signing certificate in the Windows Application
# Packaging Project or add an existing signing certificate to the project.
# Next, use PowerShell to encode the .pfx file using Base64 encoding
# by running the following Powershell script to generate the output string:
#
# $pfx_cert = Get-Content '.\SigningCertificate.pfx' -Encoding Byte
# [System.Convert]::ToBase64String($pfx_cert) | Out-File 'SigningCertificate_Encoded.txt'
#
# Open the output file, SigningCertificate_Encoded.txt, and copy the
# string inside. Then, add the string to the repo as a GitHub secret
# and name it "Base64_Encoded_Pfx."
# For more information on how to configure your signing certificate for
# this workflow, refer to https://github.com/microsoft/github-actions-for-desktop-apps#signing
#
# Finally, add the signing certificate password to the repo as a secret and name it "Pfx_Key".
# See "Build the Windows Application Packaging project" below to see how the secret is used.
#
# For more information on GitHub Actions, refer to https://github.com/features/actions
# For a complete CI/CD sample to get started with GitHub Action workflows for Desktop Applications,
# refer to https://github.com/microsoft/github-actions-for-desktop-apps

name: Build Lance Extension

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build_server:
    runs-on: 
      windows-2022  # For a list of available runner types, refer to https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install .NET
      uses: actions/setup-dotnet@v3.0.3
      with:
        dotnet-version: 6.0.x
      
    - name: Execute build
      run: dotnet build

    - name: Execute unit tests
      run: dotnet test
      
    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: server
        path: .\lance-server\bin\Debug\
      
  build_extension:
    needs: build_server
    runs-on: 
      windows-2022  # For a list of available runner types, refer to https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup Node.js environment
      uses: actions/setup-node@v3.6.0
      with:
        node-version: 16.10.x
        
    - name: install vsce
      run: npm -g install vsce
        
    - name: Download server artifact
      uses: actions/download-artifact@v3
      with:
        name: server
        path: lance-extension/server

    - name: install dependencies
      working-directory: .\lance-extension
      run: npm ci

    - name: Execute build
      working-directory: .\lance-extension
      run: npm run compile
      
    - name: package
      working-directory: .\lance-extension
      run: vsce package --no-rewrite-relative-links
      
    - name: Upload Extension
      uses: actions/upload-artifact@v3
      with:
        name: extension
        path: .\lance-extension\*.vsix
